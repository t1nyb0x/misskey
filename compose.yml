version: "3"

services:
  web:
    build: .
    restart: always
    links:
      - db
      - redis
#     - meilisearch
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - VIRTUAL_HOST=lovelive-misskey.t1nyb0x.cloud
      - VIRTUAL_PORT=3000
    # ports:
    #   - "3000:3000"
    networks:
      - internal_network
      - external_network
    volumes:
      - ./files:/misskey/files
      - ./.config:/misskey/.config:ro
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: '5'
    deploy:
      resources:
        limits:
          memory: 1.5g
    memswap_limit: 3g

  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - internal_network
    volumes:
      - ./redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: '5'

  db:
    restart: always
    image: postgres:15-alpine
    networks:
      - internal_network
    env_file:
      - .config/docker.env
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: '5'

#  meilisearch:
#    restart: always
#    image: getmeili/meilisearch:v1.3.4
#    environment:
#      - MEILI_NO_ANALYTICS=true
#      - MEILI_ENV=production
#    env_file:
#      - .config/meilisearch.env
#    networks:
#      - internal_network
#    volumes:
#      - ./meili_data:/meili_data

networks:
  internal_network:
    internal: true
  external_network:
    external: true
    name: proxy-network
